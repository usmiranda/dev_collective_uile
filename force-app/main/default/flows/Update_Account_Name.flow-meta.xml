<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>54.0</apiVersion>
    <assignments>
        <name>OppName</name>
        <label>OppName</label>
        <locationX>528</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>Open_Opp.Name</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Opp_Name</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Opp</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>OppName_TaxReturn</name>
        <label>OppName TaxReturn</label>
        <locationX>264</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>Open_Opp.Name</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>OppNameTaxReturn</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Opp</targetReference>
        </connector>
    </assignments>
    <constants>
        <name>Tax_Return</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Tax Return</stringValue>
        </value>
    </constants>
    <decisions>
        <name>TaxReturn</name>
        <label>TaxReturn</label>
        <locationX>396</locationX>
        <locationY>575</locationY>
        <defaultConnector>
            <targetReference>OppName</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>IsTaxReturn</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Open_Opp.Record_Type_Name__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Tax_Return</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>OppName_TaxReturn</targetReference>
            </connector>
            <label>IsTaxReturn</label>
        </rules>
    </decisions>
    <formulas>
        <name>EmojiUpdate</name>
        <dataType>String</dataType>
        <expression>IF(
ISPICKVAL({!Open_Opp.StageName}, &quot;ww&quot;),
&quot;1&quot;,
&quot;2&quot;
)</expression>
    </formulas>
    <formulas>
        <name>Opp_Name</name>
        <dataType>String</dataType>
        <expression>{!Open_Opp.Contact_Name__c} + &apos; | &apos; + {!Open_Opp.Account.Name} + &apos; | &apos; + {!Open_Opp.Emoji_Update__c}</expression>
    </formulas>
    <formulas>
        <name>OppNameTaxReturn</name>
        <dataType>String</dataType>
        <expression>{!Open_Opp.Contact_Name__c} &amp;&quot; | &quot;&amp; {!Open_Opp.Account.Name} &amp; &quot; | &quot; &amp;  &quot; &quot; &amp; {!Open_Opp.Tax_Return_Year__c} &amp;&quot; &quot; &amp;TEXT({!Open_Opp.Tax_Return_Type__c} )</expression>
    </formulas>
    <interviewLabel>Update Account Name {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Update Account Name</label>
    <loops>
        <name>Open_Opp</name>
        <label>Open Opp</label>
        <locationX>176</locationX>
        <locationY>455</locationY>
        <collectionReference>Get_Open_Opportunities</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>TaxReturn</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Open_Opportunities</name>
        <label>Get Open Opportunities</label>
        <locationX>176</locationX>
        <locationY>335</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Open_Opp</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsClosed</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Opportunity</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Opp</name>
        <label>Update Opp</label>
        <locationX>396</locationX>
        <locationY>911</locationY>
        <connector>
            <targetReference>Open_Opp</targetReference>
        </connector>
        <inputReference>Open_Opp</inputReference>
    </recordUpdates>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Open_Opportunities</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Name</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Account</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
