name: Staging-Pull-Request-Deployment
on:
  push:
    branches: [githubtest]
    paths:
      - "force-app/**"
      - "manifest/**"
jobs:
  StagingPullRequestDeployment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: Checking the branch and the package file
        run: |
          echo "*github head_ref: ${{ github.head_ref}}" 
          echo "**github.ref: ${{ github.ref}}"
          echo "***github.ref_name: ${{ github.ref_name}}" 
          finalBranchName=${{github.ref_name}}
          echo "Final branch name: => " $finalBranchName
          packageFileName="manifest/package-$finalBranchName.xml"
          echo "package File Name: -> $packageFileName"
          echo "Checking if the package exists"
          if [[ -f $packageFileName  ]]; then
            echo "The package file exist, continuing the process!"
          else
            echo "The package file does not exist, the process will fail!"
          fi

          echo "PACKAGE_FILE_NAME=$packageFileName" >> $GITHUB_ENV;
      - name: Install sfdx CLI
        run: npm install sfdx-cli --global
      - name: Check CLI the version
        run: sfdx -v
      - name: Installing xml2js
        run: npm install xml2js
      - name: Reading package test classes
        run: |
          SFDX_SPECIFIC_TEST_FOUND=$(node ./scripts/js/readApexTestClass.js "${{ env.PACKAGE_FILE_NAME }}");
          echo "SFDX_SPECIFIC_TEST_FOUND=$SFDX_SPECIFIC_TEST_FOUND" >> $GITHUB_ENV;
      - name: Defining the test command
        run: |
          if [ -z "${{ env.SFDX_SPECIFIC_TEST_FOUND }}" ]
          then
            echo "There is no test classes"
            SFDX_RUN_TEST_LEVEL="-l NoTestRun"
          else
            SFDX_RUN_TEST_LEVEL="-l RunSpecifiedTests -r ${{ env.SFDX_SPECIFIC_TEST_FOUND }}"
          fi
          echo "SFDX_RUN_TEST_LEVEL=$SFDX_RUN_TEST_LEVEL" >> $GITHUB_ENV;
      - name: Printing specific test classes found
        run: |
          echo "Specific test classes to run: ${{ env.SFDX_RUN_TEST_LEVEL }}"
      - name: Login in the environment
        env:
          DEV_USER_ADMIN: ${{ secrets.DEV_USER_ADMIN }}
          DEV_CONSUMER_KEY: ${{ secrets.DEV_CONSUMER_KEY }}
          DEV_INSTANCE_URL: ${{ secrets.DEV_INSTANCE_URL }}
          SERVER_KEY_CERTIFICATE: ${{ secrets.SERVER_KEY_CERTIFICATE }}
        run: |
          echo "$SERVER_KEY_CERTIFICATE" > ./JWT/connectionFile
          sfdx auth:jwt:grant -i $DEV_CONSUMER_KEY -f JWT/connectionFile -u $DEV_USER_ADMIN -s -r $DEV_INSTANCE_URL -a DeploymentOrg
          rm -rf JWT
      - name: Removing existing older folder
        run: rm -rf Deploy
      - name: Converting the package
        run: sfdx force:source:convert -r force-app/ -d Deploy -x "${{ env.PACKAGE_FILE_NAME }}"
      -name: Retrieve all info from Prod
        run: | 
          sfdx force:mdapi:retrieve -r force-app/ -k package-general.xml
      - name: Deploying the package file
        #if: github.event.pull_request.merged == true
        run: |
          echo "pull request merged?-> ${{github.event.pull_request.merged}}"
          echo "Doing the real deployment in the environment"
        #  sfdx force:mdapi:deploy -d Deploy/ -w -1 ${{ env.SFDX_RUN_TEST_LEVEL }}
